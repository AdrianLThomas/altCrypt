{"name":"altCrypt","tagline":".NET file encryption/decryption library","body":"# altCrypt\r\nA highly flexible symmetric file encryption/decryption library for .NET. No messing around with streams - this library does that for you! (but you're welcome to continue using them too).\r\n\r\nThe library can be used in your own applications.\r\nOr you can use the command line utility to encrypt your files and directories manually.\r\n\r\nIt currently only supports the full version of .NET (4.6) but a WinRT / Universal solution is in the pipeline.\r\n\r\n## Sample Usage\r\n```c#\r\n    IFile file = new LocalFile(@\"C:\\temp\\MyFile.txt\");         //1. Select a file to be encrypted\r\n    IKey key = new Key(\"Pass@w0rd1\");                          //2. Create a key\r\n    IIV iv = new RandomIV();                                   //3. Choose how you want an IV / nonce to be generated per file\r\n    using(SymmetricAlgorithm algorithm = Aes.Create()){        //4. Choose the algorithm you would like to use\r\n        var encryptor = new FileEncryptor(key, iv, algorithm); //5. Create the encryptor\r\n        await encryptor.EncryptAsync(file);                    //6. Encrypt the file\r\n        await encryptor.DecryptAsync(file);                    //7. Decrypt the file\r\n    }\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}